
Stairs & multiple height levels:
1 - pathfinder getNeighbours needs to take into account the height levels of neighbour cells
  -- should only be able to step up/down in increments of .2

2 - introduce falling from any height
  -- a lower neighbour is always valid
  -- need to have a fall transition, choose between walk & fall based on height diff of start & end
  




Animations:
- falling
- crouch forward strafe 


Navigation:
- crouch walk transition
- climb/drop transition


Interaction:
- button press
- pick up
- carry

Logic/Goals:



NOTES:

- Cell Transitions should define their own logic for when they are finished rather than checking distance
  to the end cell. E.g it may need to wait for an animation to finish.

- If I auto enter Idle/some anim from JumpEnd, I may need to:

    if (currentActionName === AnimationAsset.JumpEnd) {
          this.currentAction?.stop();
          nextAction.play();
        }


New assets todo:

- Merge in new assets branch now that I know it works. Remove all old assets stuff.

- Replace Experiments with Scenes. There will be at most 2 scenes; the main one, and a tester one.

- Lose the grid system. Placing objects in the scene and creating path nodes are separate systems,
  albeit somewhat linked. Perhaps do something similar to my traffic scene road pieces & waypoints.
  Need to keep in mind that I might want to create scenes in blender and export, so the node system 
  should allow for that and be handcraft-able. 

- Debug mode for path nodes so I can ensure it's made correctly.

- Back to basics; square grid of floor tiles with wandering to start with.




Pathfinding:

I really need to decide on a direction for this project... 

- make stuff in blender (possibly including the path node network)
- keep it entirely grid based 


- Node network; data structure that holds all the path nodes 
- Path node; an individual node in the network, has references to its neighbours
- A pathfinder class finds paths from start and end nodes within a node network

One good thing about the old system was the nodes had a reference to its grid cell type, 
allowing me to use CellTransitions which worked well. How can I achieve a similar thing?

How can I determine the transition to use to move between two path nodes?

Should the node object have a reference to the 3d piece that created it?

All I really need to know is HOW to move between two nodes 
If i had a prop with info on what created the path node, would that help?

e.g node.type = 'floor' | 'stairs' ?

but what about jumping over gaps? determining if a closed door is in the way?